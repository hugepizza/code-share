// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  codeShares    CodeShare[]
  linkShares    LinkShare[]
  claimedCodes  Code[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum AntiAbuse {
  IP
  UA
  USERID
}

enum Visibility {
  PUBLIC
  URL
}

model CodeShare {
  id         String     @id @default(cuid())
  userId     String
  title      String
  describe   String
  createdAt  DateTime   @default(now())
  claimed    Int        @default(0)
  visibility Visibility @default(PUBLIC)
  antiAbuse  AntiAbuse  @default(IP)
  total      Int
  codes      Code[]
  user       User       @relation(fields: [userId], references: [id])
}

model Code {
  id          Int       @id @default(autoincrement())
  shareId     String
  createdAt   DateTime  @default(now())
  claimedAt   DateTime?
  text        String
  claimUserId String?
  claimIp     String?
  claimUa     String?
  codeShare   CodeShare @relation(fields: [shareId], references: [id])
  user        User?     @relation(fields: [claimUserId], references: [id])
}

model LinkShare {
  id        String    @id @default(cuid())
  userId    String
  title     String
  describe  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  claimed   Int       @default(0)
  url       String
  user      User      @relation(fields: [userId], references: [id])
}
